<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java基础 on 编程</title><link>https://code.mzfqy.site/tags/java%E5%9F%BA%E7%A1%80/</link><description>Recent content in Java基础 on 编程</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 08 Jan 2024 22:13:22 +0800</lastBuildDate><atom:link href="https://code.mzfqy.site/tags/java%E5%9F%BA%E7%A1%80/rss.xml" rel="self" type="application/rss+xml"/><item><title>12.Java中的字符串缓冲区和正则表达式</title><link>https://code.mzfqy.site/post/55/</link><pubDate>Sun, 16 May 2021 18:30:02 +0800</pubDate><guid>https://code.mzfqy.site/post/55/</guid><description>1、字符串缓冲区 1.1 概念： 就是用来保存临时的字符数据的空间； 1.2 Java的字符串缓冲区类： StringBuffer：是线程安全的，效率相对比较低</description></item><item><title>11.Java中的String类讲解</title><link>https://code.mzfqy.site/post/54/</link><pubDate>Sat, 08 May 2021 18:30:02 +0800</pubDate><guid>https://code.mzfqy.site/post/54/</guid><description>使用面向对象的方式写程序，很多时候都是在直接使用别人写好的类； JDK中提供了大量类供我们使用，不过我们不需要去学习所有的类，只需要掌握开发中</description></item><item><title>10.Java中如何处理异常</title><link>https://code.mzfqy.site/post/53/</link><pubDate>Wed, 05 May 2021 18:30:02 +0800</pubDate><guid>https://code.mzfqy.site/post/53/</guid><description>1、介绍 1.1 概念： 异常，就是不正常情况；程序中出现不符合预期的情况就是异常； 1.2 作用： 可以针对程序中出现的问题作出相应处理，提高程序健壮性； 在程</description></item><item><title>8.Java基础知识：面向对象04</title><link>https://code.mzfqy.site/post/51/</link><pubDate>Sat, 24 Apr 2021 18:30:02 +0800</pubDate><guid>https://code.mzfqy.site/post/51/</guid><description>1、抽象类 1.1 概念：将abstract关键字写在class前面的类叫抽象类 抽象函数格式: 抽象函数没有函数体,连大括号都没有 抽象函数用abstr</description></item><item><title>9.Java基础知识：面向对象05</title><link>https://code.mzfqy.site/post/52/</link><pubDate>Sat, 24 Apr 2021 18:30:02 +0800</pubDate><guid>https://code.mzfqy.site/post/52/</guid><description>1、内部类 1.1 概念： 就是一个类定义在其他类里面的类；包含其他类的类，叫做外部类；被外部类包含的类，叫做内部类； 1.2 分类（根据书写位置分） 1.2.1 成员内</description></item><item><title>7.Java基础知识：面向对象03</title><link>https://code.mzfqy.site/post/50/</link><pubDate>Sun, 18 Apr 2021 18:30:02 +0800</pubDate><guid>https://code.mzfqy.site/post/50/</guid><description>1、代码块 1.1 概念：就是使用大括号括起来的一段代码； 1.2 格式 { 代码； } 1.3 分类（代码块的按照书写位置）： 局部代码块 书写在一个类的局部位置（函数里面</description></item><item><title>6.Java基础知识：面向对象02</title><link>https://code.mzfqy.site/post/49/</link><pubDate>Sat, 17 Apr 2021 18:30:02 +0800</pubDate><guid>https://code.mzfqy.site/post/49/</guid><description>1、封装 1.1 概念： 封装，就是包装的意思 1.2 用法： java中的封装： 函数：封装了一段实现功能的代码； 类：封装了函数和成员变量； 如果外界需要访问被封</description></item><item><title>5.Java基础知识：面向对象01</title><link>https://code.mzfqy.site/post/48/</link><pubDate>Sun, 11 Apr 2021 18:30:02 +0800</pubDate><guid>https://code.mzfqy.site/post/48/</guid><description>1、面向过程和面向对象 1.1 面向过程 按照这种思想写程序，我们就要先分析整个程序有哪些功能组成，然后分别写函数实现每一个功能，最后按顺序调用这些函</description></item><item><title>4.Java基础知识：数组</title><link>https://code.mzfqy.site/post/47/</link><pubDate>Thu, 18 Mar 2021 18:30:02 +0800</pubDate><guid>https://code.mzfqy.site/post/47/</guid><description>1、数组 1.1 介绍： 把具有相同类型的若干变量按有序的形式组织起来,这些按序排列的同类数据元素的集合称为数组。 1.2 格式一： 元素类型[] 数组名 = new 元素</description></item><item><title>3.Java基础知识：函数</title><link>https://code.mzfqy.site/post/46/</link><pubDate>Wed, 17 Mar 2021 18:30:02 +0800</pubDate><guid>https://code.mzfqy.site/post/46/</guid><description>1、函数 1.1 介绍： 就是定义在 类中 的 具有特定功能 的一段 独立小程序，与main函数同级别。 1.2 语法： 修饰符 返回值类型 函数名(参数类型 形式参数1, 参数</description></item><item><title>1.Java基础概述</title><link>https://code.mzfqy.site/post/44/</link><pubDate>Tue, 16 Mar 2021 18:30:02 +0800</pubDate><guid>https://code.mzfqy.site/post/44/</guid><description>1、简介 Java 是由 Sun Microsystems 公司于 1995 年 5 月推出的 Java 面向对象程序设计语言和 Java 平台的总称。由 James Gosling和同事们共同研发，并在 1995 年正式推出。 后来 Sun 公司</description></item><item><title>2.Java基础知识：语法</title><link>https://code.mzfqy.site/post/45/</link><pubDate>Tue, 16 Mar 2021 18:30:02 +0800</pubDate><guid>https://code.mzfqy.site/post/45/</guid><description>1、Java中的关键字 关键字 说明 abstract 表明类或者成员方法具有抽象属性 assert 用来进行程序调试 boolean 基本数据类型之一，布尔类型 break 提前跳出一个块 byte 基本数据类型</description></item></channel></rss>